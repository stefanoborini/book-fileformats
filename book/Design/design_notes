needs of the file format

handling of large files
  are you able to keep the whole contents in memory? 
  do you need to access the data on the disk keeping only a part of the info in memory?

needs for a file format
- a data model for the data being stored (abstraction) data organization and layouting
- a format specification (concretization on the disk of the data model)
- an API for accessing the data. the API should only provide checks and control for the layout consistency, not data consistency.

Versioning of the file format

Incremental modifications or single shot save?

description by layouting or by typing?

leading dimension

mandatory fields, optional fields: where a default should be placed? strategies for defaulting.

file format specifications

data correctness. how to ensure that the data are not corrupted? which is the level of confidence?

Simone Piunno
- cenno alle rappresentazioni (es. formati numerici binary vs ascii etc)
02/09/06 19:52
- serializzazione
02/09/06 19:52
- locking e atomicita'
- human-readable vs compact
- portability tra piattaforme (endianness, larghezza dei tipi)
- efficienza (allineamenti a word e/o a page)
- cos'Ã¨ un file nel mondo POSIX (le primitive open read write seek close
- relazioni tra file format e wireformat quando i dati vanno trasmess
- charset e codifiche del testo
- estensioni e altri metadati
- MIME
- algoritmi di compressione e checksumming
- strutture dati

- platform independence




aggregate correlated data
temporary storage
IPC communication
information storage and exchance

Characteristics of a file format

skipping unknown content
backward compatibility, forward compatibility
streaming
incremental addition
atomicity
endianness
checksumming

Fortran file format

writing C structures
	 
IFF and derivatives

"for instance, an easy way to skip over data you don't know what to do with"

argomenti da tenere presenti

mime types (rfc 2048)
magic numbers
extension

solid compression

FIXME: not mine
If you decide that you must create a new file format, here are a few hints that might help making your format more popular:

    * Use a chunk structure for your file format. This means that each part of the file will have a signature which identifies it, its length in bytes followed by the data of that part. This way, older software will be able to skip parts of the file that it doesn't know.

Expected Glossary

fixed length record
variable length record
fixed blocked : fixed size records, n to a block
variable size records, n to a block
VSB variable spanned blocked: variable sized records that can occupy more than
one block

fixed length records rende piu' facile saltare nel file.
