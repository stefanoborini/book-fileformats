Table-ID: tar-typeflags
Title: TAR typeflags

Value   |Meaning                                                                                                                                                                                                                        | Used in
0, NUL  |Regular file. The NUL value is provided NUL for compatibility with old archives. New ustar archives must be created with REGTYPE if the filename ends with a slash, tar assumes it's a directory regardless of the type flag.  | V7,gnu, ustar
1       |Represents a link to an already stored file. The name of the referenced file is stored into the "Name of linked file" field, NUL-terminated                                                                                    | ustar
2	    |Represents a symbolic link. The name of the referenced file is stored into the "Name of linked file" field, NUL-terminated.                                                                                                    | ustar
3,4     |Represents a character and block device respectively. The "Device major" and "Device minor" will contain the major and minor device numbers.   	                                                                            | ustar
5       |Specifies a directory or subdirectory.  The filename should end with a slash character. Size is normally zero, but in some systems it is filled with a value for disk allocation needs.                                        | ustar
6       |Specifies a FIFO special file.                                                                                                                                                                                                 | ustar
7       |Represents a file for which the tar implementation associated some high-performance management. which is a normal If the type is not supported, then it must be handled as a regular file.                                     | ustar
g       |Global extended header                                                                                                                                                                                                         | POSIX.1-2001
x       |Extended header                                                                                                                                                                                                                | POSIX.1-2001
A       |Solaris Access Control List							Sun tar
E       |Solaris Extended Attribute File						Sun tar
D       |GNU incremental 									GNU 
		\begin{verbatim}
		This is a dir entry that contains
		the names of files that were in
		the dir at the time the dump
		was made 
		  	This represents a directory and a list of files created by the
		--incremental (-G) option. The size field gives the total size of the
		associated list of files. Each file name is preceded by either a `Y' (the
		file should be in this archive) or an `N'. (The file is a directory, or is
		not stored in the archive.) Each file name is terminated by a null. There is
		an additional null after the last file name.
		\end{verbatim}
M 		Multivolume header									GNU
		\begin{verbatim}
			This is the continuation
			of a file that began on another
			volume */
			This represents a file continued from another volume of a multi-volume
			archive created with the --multi-volume (-M) option. The original type of
			the file is not given here. The size field gives the maximum size of this
			piece of the file (assuming the volume does not end before the file is
			written out). The offset field gives the offset from the beginning of the
			file where this part of the file begins. Thus size plus offset should equal
			the original size of the file.
		\end{verbatim}
K 		\begin{verbatim}									GNU
			Identifies the NEXT file on the tape
			as having a long linkname */
		\end{verbatim}
L 		\begin{verbatim}									GNU
			Identifies the NEXT file on the tape
			as having a long name. */
		\end{verbatim}
N 		\begin{verbatim}									GNU
			For storing filenames that didn't
			fit in 100 characters */
		\end{verbatim}
S 		\begin{verbatim}									GNU
			This is for sparse files */
			This flag indicates that we are dealing with a sparse file. Note that
			archiving a sparse file requires special operations to find holes in the
			file, which mark the positions of these holes, along with the number of
			bytes of data to be found after the hole.
		\end{verbatim}

V 		\begin{verbatim}									GNU
			This file is a tape/volume header */
           /* Ignore it on extraction */
			This file type is used to mark the volume header that was given with the
			--label=archive-label (-V archive-label) option when the archive was
				created. The name field contains the name given after the
			--label=archive-label (-V archive-label) option. The size field is zero.
			Only the first file in each volume of an archive should have this type.
		\end{verbatim}
I 		\begin{verbatim}
			Inode (metadata only) no file content
		\end{verbatim}
X 		\begin{verbatim}
			POSIX.1-2001 xtended (VU version)
		\end{verbatim}
